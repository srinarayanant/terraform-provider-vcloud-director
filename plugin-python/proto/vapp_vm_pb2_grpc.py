# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from proto import vapp_vm_pb2 as proto_dot_vapp__vm__pb2


class VappVmStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Create = channel.unary_unary(
        '/proto.VappVm/Create',
        request_serializer=proto_dot_vapp__vm__pb2.CreateVappVmInfo.SerializeToString,
        response_deserializer=proto_dot_vapp__vm__pb2.CreateVappVmResult.FromString,
        )
    self.Delete = channel.unary_unary(
        '/proto.VappVm/Delete',
        request_serializer=proto_dot_vapp__vm__pb2.DeleteVappVmInfo.SerializeToString,
        response_deserializer=proto_dot_vapp__vm__pb2.DeleteVappVmResult.FromString,
        )
    self.Read = channel.unary_unary(
        '/proto.VappVm/Read',
        request_serializer=proto_dot_vapp__vm__pb2.ReadVappVmInfo.SerializeToString,
        response_deserializer=proto_dot_vapp__vm__pb2.ReadVappVmResult.FromString,
        )
    self.Update = channel.unary_unary(
        '/proto.VappVm/Update',
        request_serializer=proto_dot_vapp__vm__pb2.UpdateVappVmInfo.SerializeToString,
        response_deserializer=proto_dot_vapp__vm__pb2.UpdateVappVmResult.FromString,
        )


class VappVmServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def Create(self, request, context):
    """create a VappVm
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Delete(self, request, context):
    """delete a VappVm
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Read(self, request, context):
    """Read VappVm
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Update(self, request, context):
    """Update VappVm
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_VappVmServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Create': grpc.unary_unary_rpc_method_handler(
          servicer.Create,
          request_deserializer=proto_dot_vapp__vm__pb2.CreateVappVmInfo.FromString,
          response_serializer=proto_dot_vapp__vm__pb2.CreateVappVmResult.SerializeToString,
      ),
      'Delete': grpc.unary_unary_rpc_method_handler(
          servicer.Delete,
          request_deserializer=proto_dot_vapp__vm__pb2.DeleteVappVmInfo.FromString,
          response_serializer=proto_dot_vapp__vm__pb2.DeleteVappVmResult.SerializeToString,
      ),
      'Read': grpc.unary_unary_rpc_method_handler(
          servicer.Read,
          request_deserializer=proto_dot_vapp__vm__pb2.ReadVappVmInfo.FromString,
          response_serializer=proto_dot_vapp__vm__pb2.ReadVappVmResult.SerializeToString,
      ),
      'Update': grpc.unary_unary_rpc_method_handler(
          servicer.Update,
          request_deserializer=proto_dot_vapp__vm__pb2.UpdateVappVmInfo.FromString,
          response_serializer=proto_dot_vapp__vm__pb2.UpdateVappVmResult.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'proto.VappVm', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
